---
import { EVENT_METADATA, ORGANIZER_METADATA, TICKET_METADATA } from "../lib/constants";

interface Props {
    title: string;
    description: string;
    slug?: string | undefined;
    frontmatter?: {
        file: string; url: string | undefined;
    } & {
        title: string; description: string;
    };
}

const {title, description, page, slug, frontmatter} = Astro.props;
const image = `${Astro.url.origin}/preview.jpg`;

const schema = {
    "@context": "http://schema.org",
    "@type": "Event",
    "name": EVENT_METADATA.name, // Name of the event
    "startDate": EVENT_METADATA.startDate, // Start date of the event in ISO 8601 format
    "endDate": EVENT_METADATA.endDate, // End date of the event in ISO 8601 format
    "eventAttendanceMode": "https://schema.org/" + EVENT_METADATA.attendanceMode, // Attendance mode: OnlineEventAttendanceMode, OfflineEventAttendanceMode, or MixedEventAttendanceMode
    "eventStatus": "https://schema.org/" + EVENT_METADATA.status, // Event status: EventScheduled, EventCancelled, EventPostponed, EventRescheduled
    "location": {
        "@type": "Place",
        "name": EVENT_METADATA.locationName, // Name of the location
        "address": {
            "@type": "PostalAddress",
            "streetAddress": EVENT_METADATA.streetAddress, // Street address
            "addressLocality": EVENT_METADATA.addressLocality, // City
            "addressRegion": EVENT_METADATA.addressRegion, // State or region
            "postalCode": EVENT_METADATA.postalCode, // Postal code
            "addressCountry": EVENT_METADATA.addressCountry // Country
        }
    },
    "image": EVENT_METADATA.image_url, // URL of the event image
    "description": EVENT_METADATA.description, // Description of the event
    "url": EVENT_METADATA.site_url, // URL of the event page
    "organizer": {
        "@type": "Organization",
        "name": ORGANIZER_METADATA.name, // Name of the organizer
        "url": ORGANIZER_METADATA.url // URL of the organizer
    },
    "offers": {
        "@type": "Offer",
        "url": TICKET_METADATA.url, // URL to purchase tickets
        "price": TICKET_METADATA.price, // Ticket price
        "priceCurrency": TICKET_METADATA.currency, // Currency of the ticket price
        "availability": "https://schema.org/" + TICKET_METADATA.availability, // Availability: InStock, OutOfStock, PreOrder
        "validFrom": TICKET_METADATA.validFrom // ISO 8601 date when the tickets go on sale
    },
};

---

<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width"/>
    <link rel="icon" type="image/x-icon" href="/favicon.ico"/>
    <meta name="generator" content={Astro.generator}/>
    <title>{title}</title>
    <meta name="description" content={description}/>
    <meta name="robots" content="/favicon/sitemap-index.xml"/>
    <!-- Basic OG tags for sharing your website's content on platforms like Facebook and LinkedIn -->
    <meta property="og:title" content={title}/>
    <meta property="og:description" content={description}/>
    <meta property="og:type" content="website"/>
    <meta property="og:url" content={Astro.url.origin}/>
    <meta
            property="og:image"
            content={image || EVENT_METADATA.image_url}
    />
    <!-- Basic Twitter Card tags -->
    <meta name="twitter:card" content="summary_large_image"/>
    <meta name="twitter:title" content={title}/>
    <meta name="twitter:description" content={description}/>
    <meta
            name="twitter:image"
            content={image || EVENT_METADATA.image_url}
    />

    <link rel="preconnect" href="https://cdn.fontshare.com"/>
    <script type="application/ld+json" set:html={JSON.stringify(schema)}/>
    <script defer src="https://analytics.us.umami.is/script.js" data-website-id={import.meta.env.UMAMI_ID}></script>
    <link rel="sitemap" href="/sitemap-index.xml" />
</head>
<body
        class="bg-darkslate-700 md:h-screen flex flex-col justify-center items-center"
>
<slot name="loader"/>
<slot/>
</body>
</html>

<style is:global>
    @font-face {
        font-family: "CabinetGrotesk";
        src: url("/fonts/CabinetGrotesk-Variable.ttf") format("truetype-variations");
        font-weight: normal;
        font-style: normal;
        font-display: swap;
        font-weight: 100 1000;
    }

    @font-face {
        font-family: "Satoshi";
        src: url("/fonts/Satoshi-Variable.ttf") format("truetype-variations");
        font-weight: normal;
        font-style: normal;
        font-display: swap;
        font-weight: 100 1000;
    }

    body {
        margin: 0;
        font-family: "Satoshi", sans-serif;
        -webkit-font-smoothing: antialiased;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-family: "Cabinet Grotesk", sans-serif;
    }

    p {
        font-family: "Satoshi";
    }

    b {
        font-weight: 700 !important;
    }

    .shadow-border {
        box-shadow: 10px 10px 0 #E8A7AB;
        border-radius: 8px;
    }
</style>
